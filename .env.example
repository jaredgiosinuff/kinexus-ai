# Kinexus AI Environment Configuration Template
# Copy this file to .env and update with your actual values

# ===========================================
# ENVIRONMENT
# ===========================================
ENVIRONMENT=development
LOG_LEVEL=INFO

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
DB_HOST=postgres
DB_PORT=5432
DB_NAME=kinexus_dev
DB_USER=kinexus_user
DB_PASSWORD=kinexus_secure_pass_2024
DB_URL=postgresql://kinexus_user:kinexus_secure_pass_2024@postgres:5432/kinexus_dev

# ===========================================
# REDIS CONFIGURATION
# ===========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_URL=redis://redis:6379/0

# ===========================================
# AWS CONFIGURATION
# ===========================================
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_ENDPOINT_URL=http://localstack:4566

# For production, use IAM roles instead of access keys:
# AWS_ROLE_ARN=arn:aws:iam::123456789012:role/KinexusAIRole

# ===========================================
# OPENSEARCH CONFIGURATION
# ===========================================
OPENSEARCH_HOST=opensearch
OPENSEARCH_PORT=9200
OPENSEARCH_URL=http://opensearch:9200
OPENSEARCH_USERNAME=admin
OPENSEARCH_PASSWORD=admin

# ===========================================
# AI MODEL API KEYS
# ===========================================
# Anthropic (Claude 4 Opus, Sonnet)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# OpenAI (for embeddings and fallback)
OPENAI_API_KEY=your_openai_api_key_here

# AWS Bedrock (Nova models)
# Uses AWS credentials above - no separate API key needed

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# Generate with: openssl rand -base64 32
JWT_SECRET_KEY=auto_generated_by_quick_start_script
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# API Security
API_KEY_HEADER=X-API-Key
CORS_ORIGINS=["http://localhost:3107", "http://localhost:3000"]

# ===========================================
# INTEGRATION CREDENTIALS
# ===========================================
# GitHub Integration
GITHUB_TOKEN=your_github_personal_access_token_here
GITHUB_WEBHOOK_SECRET=your_github_webhook_secret_here

# Jira Integration
JIRA_URL=https://yourcompany.atlassian.net
JIRA_USERNAME=your_jira_username_here
JIRA_API_TOKEN=your_jira_api_token_here

# Slack Integration
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token-here
SLACK_SIGNING_SECRET=your_slack_signing_secret_here

# Confluence Integration
CONFLUENCE_URL=https://yourcompany.atlassian.net/wiki
CONFLUENCE_USERNAME=your_confluence_username_here
CONFLUENCE_API_TOKEN=your_confluence_api_token_here

# ===========================================
# MONITORING & OBSERVABILITY
# ===========================================
# Prometheus metrics
ENABLE_METRICS=true
METRICS_PORT=9090

# Structured logging
LOG_FORMAT=json
LOG_FILE=/app/logs/kinexus.log

# Health check configuration
HEALTH_CHECK_TIMEOUT=30
HEALTH_CHECK_INTERVAL=60

# ===========================================
# AGENT CONFIGURATION
# ===========================================
# Agent communication
AGENT_NETWORK=kinexus_dev_network
AGENT_TIMEOUT=300

# Model selection
DEFAULT_REASONING_MODEL=claude-4-opus
DEFAULT_FAST_MODEL=claude-4-sonnet
DEFAULT_MULTIMODAL_MODEL=nova-pro
DEFAULT_ACTION_MODEL=nova-act

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================
# Only used in development environment
DEBUG=true
RELOAD=true
WORKERS=1

# Mock services
USE_MOCK_BEDROCK=true
USE_MOCK_INTEGRATIONS=false

# ===========================================
# PRODUCTION OVERRIDES
# ===========================================
# Uncomment and modify for production deployment:

# ENVIRONMENT=production
# DEBUG=false
# RELOAD=false
# WORKERS=4
# LOG_LEVEL=WARNING

# Use managed services in production:
# DB_HOST=your-rds-endpoint.amazonaws.com
# REDIS_URL=redis://your-elasticache-endpoint:6379
# OPENSEARCH_URL=https://your-opensearch-domain.amazonaws.com

# Security hardening:
# CORS_ORIGINS=["https://yourdomain.com"]
# JWT_ACCESS_TOKEN_EXPIRE_MINUTES=15

# ===========================================
# FEATURE FLAGS
# ===========================================
# Enable/disable features
ENABLE_GRAPHRAG=true
ENABLE_IMAGE_ANALYSIS=true
ENABLE_WEB_AUTOMATION=true
ENABLE_SELF_CORRECTION=true

# Experimental features
ENABLE_CRAG=false
ENABLE_ADVANCED_REASONING=true
ENABLE_PERSISTENT_MEMORY=true